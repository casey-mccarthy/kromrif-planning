# Generated by Django 5.1.11 on 2025-07-13 03:59

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PointAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.DecimalField(decimal_places=2, help_text='Point value (positive for gains, negative for expenses)', max_digits=10)),
                ('adjustment_type', models.CharField(choices=[('raid_attendance', 'Raid Attendance'), ('raid_bonus', 'Raid Bonus'), ('item_purchase', 'Item Purchase'), ('manual_adjustment', 'Manual Adjustment'), ('decay', 'Point Decay'), ('bonus', 'Other Bonus'), ('penalty', 'Penalty'), ('transfer', 'Point Transfer')], help_text='Type of point adjustment', max_length=20)),
                ('description', models.TextField(help_text='Detailed description of the adjustment')),
                ('character_name', models.CharField(blank=True, help_text='Character name at time of adjustment (for history)', max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this adjustment was created')),
                ('is_locked', models.BooleanField(default=False, help_text='Lock this adjustment to prevent modifications')),
                ('created_by', models.ForeignKey(blank=True, help_text='Admin/officer who created this adjustment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adjustments_created', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='The user receiving the point adjustment', on_delete=django.db.models.deletion.CASCADE, related_name='point_adjustments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Point Adjustment',
                'verbose_name_plural': 'Point Adjustments',
                'ordering': ['-created_at'],
                'permissions': [('can_lock_adjustments', 'Can lock point adjustments'), ('can_modify_locked', 'Can modify locked adjustments')],
                'indexes': [models.Index(fields=['user', '-created_at'], name='dkp_pointad_user_id_7b9412_idx'), models.Index(fields=['adjustment_type', '-created_at'], name='dkp_pointad_adjustm_653397_idx'), models.Index(fields=['created_at'], name='dkp_pointad_created_f4de56_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserPointsSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current total DKP balance', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('earned_points', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total points earned (raids, bonuses, etc.)', max_digits=10)),
                ('spent_points', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total points spent on items', max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='When this summary was last updated')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this summary was created')),
                ('user', models.OneToOneField(help_text='The user whose DKP balance this represents', on_delete=django.db.models.deletion.CASCADE, related_name='dkp_summary', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Points Summary',
                'verbose_name_plural': 'User Points Summaries',
                'ordering': ['-total_points', 'user__username'],
                'indexes': [models.Index(fields=['total_points'], name='dkp_userpoi_total_p_4e2b45_idx'), models.Index(fields=['user', 'total_points'], name='dkp_userpoi_user_id_ac0c64_idx')],
            },
        ),
    ]
